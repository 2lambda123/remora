#!/bin/sh
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% numa
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.4
#-      authors     Carlos Rosales (carlos@tacc.utexas.edu)
#-                  Antonio Gomez  (agomez@tacc.utexas.edu)
#-      license     MIT
#
#========================================================================
#  HISTORY
#       2015/12/08: Initial commit
#========================================================================

# All the functions take two arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
init_module_numa()
{
    printf "%-17s %-17s %-17s %-17s %-17s %-17s %-17s %-17s %-17s %-17s %-17s %-17s %-17s\n" "#TIME" "Node0_NumaHit" "Node0_NumaMiss" "Node0_LocalNode" "Node0_OtherNode" "Node0_MemFree" "Node0_MemUsed" "Node1_NumaHit" "Node1_NumaMiss" "Node1_LocalNode" "Node1_OtherNode" "Node1_MemFree" "Node1_MemUsed" > $2/numa_stats_$1.txt
}

collect_data_numa()
{
    #Get a timestamp in seconds for this data sample
    TIMESTAMP=`date +%s`
    # NUMA statistics
    numStat=`numastat -c`
    node0_numahit=`echo $numStat | awk '{ print $17; }'` #Memory successfully allocated on this node as intended
    node1_numahit=`echo $numStat | awk '{ print $16; }'`
    node0_numamiss=`echo $numStat | awk '{ print $19; }'` #Memory allocated on this node, although the process preferred another
    node1_numamiss=`echo $numStat | awk '{ print $20; }'`
    node0_numalocal=`echo $numStat | awk '{ print $31; }'` #Memory allocated on this node while the process was running on it
    node1_numalocal=`echo $numStat | awk '{ print $32; }'`
    node0_numaother=`echo $numStat | awk '{ print $35; }'` #Memory allocated on this node while the process was running on another node
    node1_numaother=`echo $numStat | awk '{ print $36; }'`
    numMem=`numastat -m | grep Mem`
    node0_memfree=`echo $numMem | awk '{ print $6; }'`  #Memory available on this node
    node1_memfree=`echo $numMem | awk '{ print $7; }'`
    node0_memused=`echo $numMem | awk '{ print $10; }'` #Memory used on this node
    node1_memused=`echo $numMem | awk '{ print $11; }'`
    printf "%-17d %-17d %-17d %-17d %-17d %-17f %-17f %-17d %-17d %-17d %-17d %-17f %-17f\n" $TIMESTAMP $node0_numahit $node0_numamiss $node0_numalocal $node0_numaother $node0_memfree $node0_memused $node1_numahit $node1_numamiss $node1_numalocal $node1_numaother $node1_memfree $node1_memused >> $2/numa_stats_$1.txt
}

# This function might perform some processing on the data.
# If nothing needs to be done, it can be empty (but declared)
process_data_numa()
{
  :
}

finalize_module_numa()
{
  :
}
