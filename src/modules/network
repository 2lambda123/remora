#!/bin/sh
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% network
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.7
#-      authors     Carlos Rosales (carlos@tacc.utexas.edu)
#-                  Antonio Gomez  (agomez@tacc.utexas.edu)
#-      license     MIT
#========================================================================

# All the functions take three arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
#  3.- The full path to an optional temporary storage location

init_module_network()
{
  :
}

collect_data_network()
{
  :
}

# This function might perform some processing on the data.
# If nothing needs to be done, it can be empty (but declared)
process_data_network()
{
  :
}

monitor_data_network()
{
  :
}

finalize_module_network()
{
  REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
  REMORA_MASTER=`head -n 1 $REMORA_OUTDIR/remora_nodes.txt`
  #Extract the mlx interface. It was hardcoded to mlx4_0
  interf=`ibstat | head -n 1 | awk '{print $2}' | tr -d "'"`
  if [ "$REMORA_NODE" == "$REMORA_MASTER" ]; then
	if [ "$REMORA_MODE" == "FULL" ] || [ "$REMORA_MODE" == "MONITOR" ]; then
    local idx=0
    local LID=()
    local NODES=`cat $REMORA_OUTDIR/remora_nodes.txt`
    for NODE in $NODES; do
      LIDCOMMAND="cat /sys/class/infiniband/"$interf"/ports/1/lid"
      LID[$idx]=`ssh -f $NODE $LIDCOMMAND`
      idx=$((idx+1))
    done
    net_node_cnt=0; for NODE in $NODES; do net_node_cnt=$((net_node_cnt+1)); done
    idx=1
    while [  $idx -lt $net_node_cnt ]; do
      ibtracert ${LID[0]} ${LID[$idx]} >> $REMORA_OUTDIR/network_trace.txt
      echo "_____________" >> $REMORA_OUTDIR/network_trace.txt
      idx=$((idx+1))
    done
	fi
  fi
}
