#!/bin/sh
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% network
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.4
#-      authors     Carlos Rosales (carlos@tacc.utexas.edu)
#-                  Antonio Gomez  (agomez@tacc.utexas.edu)
#-      license     MIT
#
#========================================================================
#  HISTORY
#       2015/12/08: Initial commit
#========================================================================

# All the functions take two arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
init_module_network()
{
    # Need to check that the hostlist is not empty
    if [ "$REMORA_MODE" = "FULL" ]; then
        if [ "$REMORA_PARALLEL" == "1" ]; then
            net_node_cnt=0; for i in $NODES; do net_node_cnt=$(( net_node_cnt + 1 )); done
            if [ "$net_node_cnt" == "0"  ];then
                print_error "Host list is empty"
                exit 1
            fi

            # Doing this here because we want slurm hostlist check to run
            # to make sure we are in a compute node
            if [ "$PARALLEL" == "0" ]; then
                NODES=`hostname -s`
            fi

            idx=0
            LID=()
            for i in $NODES
            do
                LIDCOMMAND="cat /sys/class/infiniband/mlx4_0/ports/1/lid"
                LID[$idx]=`ssh -f $i $LIDCOMMAND`
            done

            # IB connectivity info
            idx=1
            while [  $idx -lt $net_node_cnt ]; do
                ibtracert ${LID[0]} ${LID[$idx]} >> $2/trace_network.txt
                echo "_____________" >> $2/trace_network.txt
                idx=$((idx+1))
            done
        fi
    fi
}

collect_data_network()
{
  :
}

# This function might perform some processing on the data.
# If nothing needs to be done, it can be empty (but declared)
process_data_network()
{
  :
}

finalize_module_memory()
{
  :
}
