#!/bin/sh
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% Power module.
#% This module collects the power used by the processor by calling sensors.
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.8.1
#-      authors     Carlos Rosales (carlos@tacc.utexas.edu)
#-                  Antonio Gomez  (agomez@tacc.utexas.edu)
#-      license     MIT
#========================================================================

# All the functions take three arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
#  3.- The full path to an optional temporary storage location

init_module_power()
{
  #Check if we have access to sensors
  #If not present, don't collect power
  #If sensors returns an error (not configured or not allowed), ignore
  #the message and configure REMORA to ignore power collection
  REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3

  #Check if sensors exists. Use hash for this and the result of the command
  hash sensors 2>/dev/null
  export REMORA_POWER_IGNORE=$?

  REMORA_MASTER=`head -n 1 $REMORA_OUTDIR/remora_nodes.txt`
  if [ "$REMORA_NODE" == "$REMORA_MASTER" ]; then
      echo "export REMORA_POWER_IGNORE=$REMORA_POWER_IGNORE" >> $REMORA_OUTDIR/remora_env.txt
  fi

  if [ $REMORA_POWER_IGNORE -ne 0 ]; then
    return 1
  fi

  REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
  rm -f $REMORA_TMPDIR/power_${REMORA_NODE}.txt
  printf "%-17s %-17s\n" "#TIME" "POWER"> $REMORA_TMPDIR/power_${REMORA_NODE}.txt
}

collect_data_power()
{
  if [ $REMORA_POWER_IGNORE -ne 0 ]; then
    return 1
  fi

  REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
  local TIMESTAMP=`date +%s`
  # Get power of each node
  # We use sensors. Among other things, sensors is going to return something like this:
  # power1:      159.00 W  (interval =   1.00 s)
  local power=`sensors | grep power1 | awk '{print $2;}'`

  printf "%-17s %-17s\n" $TIMESTAMP $power >> $REMORA_TMPDIR/power_${REMORA_NODE}.txt
}


# This function might perform some processing on the data.
# If nothing needs to be done, it can be empty (but declared)
process_data_power()
{
  :
}

plot_data_power()
{
    REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
    if [ -z ${REMORA_PLOT_RESULTS+x} ] || [ "$REMORA_PLOT_RESULTS" -eq "0" ] ; then
        return
    fi

    if [ ! -e $REMORA_TMPDIR/power_${REMORA_NODE}.txt ]; then
        if [ "$REMORA_VERBOSE" == "1" ]; then
            echo "File $REMORA_TMPDIR/power_${REMORA_NODE}.txt not found"                                                      
        fi  
        return
    fi

    printf "%s \n" "<html>" > $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "<head>" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "<script type=\"text/javascript\">" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "google.charts.load('current', {'packages':['line']});" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html

    printf "%s \n" "google.charts.setOnLoadCallback(drawChart);" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "function drawChart() {" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "var data = new google.visualization.DataTable();" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "data.addColumn('number', 'Execution Time (s)');" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "data.addColumn('number', 'Power (W)');" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s\n" "data.addRows([" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    local ctime=0
    local first=0
    local firsttimestamp=0
    while read line; do
        #Skip first line
        if [ $first -eq 0 ]; then
            first=1
            continue
        fi
        #Read first timestamp
        if [ $first -eq 1 ]; then
            first=2
            firsttimestamp=`echo $line | awk '{print $1;}'`
        fi
        local timestamp=`echo $line | awk '{print $1;}'`
        local power=`echo $line | awk '{print $2;}'`
        ctime=$[timestamp - firsttimestamp]
        printf "[%s,%s],\n" $ctime $power >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    done < $REMORA_TMPDIR/power_${REMORA_NODE}.txt

    printf "%s \n" "]);" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "var options = { " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "chart: {" >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "title: 'Power Utilization'," >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "subtitle: 'in watts' " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "}," >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
    printf "%s \n" "width: 1024, " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "height: 800, " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "axes: { " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "x: { " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "0: {side: 'top'} " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "} " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "}, " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" " }; " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html

    printf "%s \n" "var chart = new google.charts.Line(document.getElementById('line_top_x')); " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "chart.draw(data, options); " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "} " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "</script> " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "</head> " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "<body> " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "  <div id=\"line_top_x\"></div> " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "</body> " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html 
    printf "%s \n" "</html> " >> $REMORA_TMPDIR/power_${REMORA_NODE}.html
}

monitor_data_power()
{
  :
}

finalize_module_power()
{
    REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
    plot_data_power $REMORA_NODE $REMORA_OUTDIR $REMORA_TMPDIR
}
