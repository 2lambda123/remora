#!/bin/sh
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% gpu
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.8.2
#-      authors     Carlos Rosales (carlos@tacc.utexas.edu)
#-                  Antonio Gomez  (agomez@tacc.utexas.edu)
#-      license     MIT
#========================================================================

# All the functions take three arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read
#  3.- The full path to an optional temporary storage location

init_module_gpu()
{
  :
}

collect_data_gpu()
{
    REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
    # Get GPU utilization data
    if [ "$REMORA_CUDA" == "1" ]; then
        current_time=`date +%s`
        gpumem=$(nvidia-smi | grep MiB | awk '{print $9}'); gpumem=${gpumem::-3}
        gpumax=$(nvidia-smi | grep MiB | awk '{print $11}'); gpumax=${gpumax::-3}
        gpumem=$(echo $gpumem | awk '{print $1/1000}')
        gpumax=$(echo $gpumax | awk '{print $1/1000}')
        gpufree=$(echo "$gpumax $gpumem" | awk '{ print $1-$2 }')
        printf "%-17d %-17f %-17f\n" $current_time $gpumem $gpufree >> $REMORA_TMPDIR/gpu_memory_stats_${REMORA_NODE}.txt
    fi
}
# This function might perform some processing on the data.
# If nothing needs to be done, it can be empty (but declared)
process_data_gpu()
{
  :
}

monitor_data_gpu()
{
  :
}

plot_data_gpu()
{
  :
}

finalize_module_gpu()
{
  :
}
