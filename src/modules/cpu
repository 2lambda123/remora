#!/bin/sh
#
#========================================================================
# HEADER
#========================================================================
#% DESCRIPTION
#% cpu
#%
#% DO NOT call this script directly. This is called by REMORA
#%
#========================================================================
#- IMPLEMENTATION
#-      version     REMORA 1.5
#-      authors     Carlos Rosales (carlos@tacc.utexas.edu)
#-                  Antonio Gomez  (agomez@tacc.utexas.edu)
#-      license     MIT
#
#========================================================================
#  HISTORY
#       2015/12/08: Initial commit
#========================================================================

# All the functions take two arguments:
#  1.- The name of the node where this function is running
#  2.- The full path where the output will be stored/read

init_module_cpu()
{
  rm -f $2/cpu*
}

collect_data_cpu()
{
  #Get CPU utilization
  #We use mpstat (installed with Remora) to collect this data
  mpstat -P ALL 1 1 | grep Average| awk '
  {
    for (i=2; i<=NF; i++)  {
        a[NR,i] = $i
    }
  }
  NF>p { p = NF }
  END {
    print " %time " systime();
    for(j=3; j<=p; j++) {
        if (j==2 || j==3 || j==5 || j==11) {
            str=""
        for(i=1; i<=NR; i++){
                if (i!=2) {
            str=str" "a[i,j];
            }
        }
        print str
        }
    }
  }' >> $2/cpu_$1.txt
}


# This function might perform some processing on the data.
# If nothing needs to be done, it can be empty (but declared)
process_data_cpu()
{
  :
}

monitor_cpu()
{
    REMORA_NODE=$1; REMORA_OUTDIR=$2; REMORA_TMPDIR=$3
	REMORA_MASTER=`head -n 1 $REMORA_OUTDIR/remora_nodes.txt`
    if [ "$REMORA_NODE" == "$REMORA_MASTER" ]; then
        avg_cpu=0; max_cpu=0; min_cpu=200
        for NODE in `cat $REMORA_OUTDIR/remora_nodes.txt`
        do 
			if [ -r $REMORA_TMPDIR/cpu_$NODE.txt ]; then 
            	COMMAND="tail -n 3 $REMORA_TMPDIR/cpu_$NODE.txt"
            	avg_cpu=`ssh $NODE $COMMAND | head -n 1`
				avg_cpu=`echo $avg_cpu | awk '{for(i=1;i<NF;i++)avg+=$i} END {print avg/(NF-1)}'`
            	if [ $(echo "$avg_cpu > $max_cpu" | bc) -eq 1 ]; then max_cpu=$avg_cpu; fi
				if [ $(echo "$avg_cpu < $min_cpu" | bc) -eq 1 ]; then min_cpu=$avg_cpu; fi
			fi
        done
        echo "$max_cpu $min_cpu" >> $REMORA_TMPDIR/monitor_cpu.txt 
    fi  
}

finalize_module_cpu()
{
  :
}
